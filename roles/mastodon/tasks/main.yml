---


- name: Récupérer Mastodon
  git: 
    repo: https://github.com/mastodon/mastodon.git
    dest: ~/live
    version: "{{ mastodon_version }}"
    force: yes
  become_user: mastodon
  become: true
  register: mastodon_git

- name: Créer le répertoire .bundle
  file:
    path: ~mastodon/live/.bundle
    state: directory
    owner: mastodon
    group: mastodon

- name: Configuration de Bundler
  template:
    src: files/bundler.conf
    dest: ~mastodon/live/.bundle/config
    owner: mastodon
    group: mastodon

- name: Installation de Mastodon
  shell: 
    cmd: ~/.rbenv/shims/bundle install && yarn install --pure-lockfile
    chdir: ~/live/
  become_user: mastodon
  become: true
  when: mastodon_git.changed
  notify: Restart Mastodon


- name: Configuration de Mastodon
  template:
    src: templates/.env.production
    dest: ~mastodon/live/.env.production
    owner: mastodon
    group: mastodon
  notify: Restart Mastodon

- name: Vérifier si la base de données Mastodon existe
  postgresql_db:
    login_host: "{{ postgresql_host }}"
    login_user: "{{ postgresql_user }}"
    login_password: "{{ postgresql_password }}"
    name: "{{ postgresql_database }}"
    state: present
  check_mode: yes
  register: mastodon_db

- name: Mise en place de la base de données
  command: 
    cmd: ~/.rbenv/shims/bundle exec rake db:setup
    chdir: ~/live/
  environment:
    RAILS_ENV: production
  become_user: mastodon
  become: true
  when: mastodon_db.changed

- name: Compilation des assets
  command: 
    cmd: ~/.rbenv/shims/bundle exec rake assets:precompile
    chdir: ~/live/
  environment:
    RAILS_ENV: production
  become_user: mastodon
  become: true
  when: mastodon_git.changed

- name: Installation des services Mastodon
  copy:
    src: ~mastodon/live/dist/{{ item }}
    dest: /etc/systemd/system/{{ item }}
    remote_src: true
  with_items: "{{ mastodon_services }}" 
  notify: Restart Mastodon

- name: Créer le répertoire de configuration du service
  file:
    path: /etc/systemd/system/{{ item }}.d
    state: directory
  with_items: "{{ mastodon_services }}" 

- name: Configuration de l'adresse d'écoute de Mastodon
  template:
    src: files/mastodon-service-bind.conf
    dest: /etc/systemd/system/{{ item }}.d/bind.conf
  with_items: "{{ mastodon_services }}" 
  notify: Restart Mastodon

- name: Activer et lancer Mastodon
  systemd:
    name: "{{ item }}"
    state: started
    enabled: true
    daemon_reload: true
  when: ansible_os_family == "Debian"
  with_items: "{{ mastodon_services }}" 
